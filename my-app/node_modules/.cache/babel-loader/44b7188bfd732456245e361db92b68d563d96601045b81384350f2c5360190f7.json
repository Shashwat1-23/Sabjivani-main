{"ast":null,"code":"var _jsxFileName = \"/Users/shashwat/Desktop/Sabjivani-main/my-app/src/components/PredictedPrice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [predictedPrice, setPredictedPrice] = useState(null);\n  const [graphImage, setGraphImage] = useState(null);\n  useEffect(() => {\n    // Replace 'Apple' with the actual item you want to predict\n    const item = 'Apple';\n\n    // Make an API request to your Flask server to get predicted data\n    fetch(`http://localhost:8090/get_predicted_price/${item}`).then(response => response.json()).then(data => {\n      setPredictedPrice(data.predicted_price);\n      setGraphImage(data.graph);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Price Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), predictedPrice !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicted Future Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: predictedPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), graphImage !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Price Prediction Graph:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${graphImage}`,\n        alt: \"Price Prediction Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3IesuWoYoGxbpwH7Ef8xnik9SwM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","predictedPrice","setPredictedPrice","graphImage","setGraphImage","item","fetch","then","response","json","data","predicted_price","graph","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/shashwat/Desktop/Sabjivani-main/my-app/src/components/PredictedPrice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [predictedPrice, setPredictedPrice] = useState(null);\n  const [graphImage, setGraphImage] = useState(null);\n\n  useEffect(() => {\n    // Replace 'Apple' with the actual item you want to predict\n    const item = 'Apple';\n\n    // Make an API request to your Flask server to get predicted data\n    fetch(`http://localhost:8090/get_predicted_price/${item}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPredictedPrice(data.predicted_price);\n        setGraphImage(data.graph);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Price Prediction</h1>\n      {predictedPrice !== null && (\n        <div>\n          <h2>Predicted Future Price:</h2>\n          <p>{predictedPrice}</p>\n        </div>\n      )}\n      {graphImage !== null && (\n        <div>\n          <h2>Price Prediction Graph:</h2>\n          <img src={`data:image/png;base64,${graphImage}`} alt=\"Price Prediction Graph\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,IAAI,GAAG,OAAO;;IAEpB;IACAC,KAAK,CAAE,6CAA4CD,IAAK,EAAC,CAAC,CACvDE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdR,iBAAiB,CAACQ,IAAI,CAACC,eAAe,CAAC;MACvCP,aAAa,CAACM,IAAI,CAACE,KAAK,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBpB,cAAc,KAAK,IAAI,iBACtBH,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCvB,OAAA;QAAAmB,QAAA,EAAIhB;MAAc;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACN,EACAlB,UAAU,KAAK,IAAI,iBAClBL,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCvB,OAAA;QAAKwB,GAAG,EAAG,yBAAwBnB,UAAW,EAAE;QAACoB,GAAG,EAAC;MAAwB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CArCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}